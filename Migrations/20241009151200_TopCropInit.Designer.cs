// <auto-generated />
using System;
using GreenGarden.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GreenGarden.Migrations
{
    [DbContext(typeof(GardenerContext))]
    [Migration("20241009151200_TopCropInit")]
    partial class TopCropInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GreenGarden.Models.Gardeners", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Cell")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("GenderIdentity")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int?>("TopCropCropId")
                        .HasColumnType("int");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("TopCropCropId");

                    b.ToTable("Gardenership");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Freya",
                            LastName = "Greene"
                        },
                        new
                        {
                            ID = 2,
                            Email = "victorharwood@gmail.com",
                            FirstName = "Victor",
                            LastName = "Harwood"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Luis",
                            LastName = "Greene"
                        });
                });

            modelBuilder.Entity("GreenGarden.Models.TopCrop", b =>
                {
                    b.Property<int>("CropId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CropId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CropId");

                    b.ToTable("TopCrops");

                    b.HasData(
                        new
                        {
                            CropId = 1,
                            Description = "Native to Asia. Part of the nightshade family.",
                            Name = "Eggplant"
                        },
                        new
                        {
                            CropId = 2,
                            Description = "Part of the nightshade family.",
                            Name = "Tomato"
                        },
                        new
                        {
                            CropId = 3,
                            Description = "Part of the nightshade family.",
                            Name = "Potato"
                        });
                });

            modelBuilder.Entity("GreenGarden.Models.Gardeners", b =>
                {
                    b.HasOne("GreenGarden.Models.TopCrop", "TopCrop")
                        .WithMany()
                        .HasForeignKey("TopCropCropId");

                    b.Navigation("TopCrop");
                });
#pragma warning restore 612, 618
        }
    }
}
